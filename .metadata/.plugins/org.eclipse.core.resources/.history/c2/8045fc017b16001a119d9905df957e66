package com.example.demo.services;

import java.util.Iterator;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.demo.domain.Project;
import com.example.demo.exception.ProjectIdException;
import com.example.demo.repository.ProjectRepository;

@Service
public class ProjectService {
	
	@Autowired
	private ProjectRepository projectRepo; 
	
	
	public Project createProject(Project project){
		try {
			project.setProjectIdentification(project.getProjectIdentification().toUpperCase());
			return projectRepo.save(project);
		
		  }catch(Exception ex) { 
			  throw new ProjectIdException("Project Id :- "+project.getProjectIdentification().toUpperCase()+" alredy exists "); }
		} 
	
	public Project findByProjectIdentification(String projectId){
		Project project = projectRepo.findByProjectIdentification(projectId.toUpperCase());
		if(project==null) {
			throw new ProjectIdException("Project Id :- "+ projectId +" do not exists "); 
		}
		return projectRepo.findByProjectIdentification(projectId.toUpperCase());
	}
	
	public Iterable<Project> findAll() {
		return projectRepo.findAll() ;
	}
	
	public ResponseEntity<?> deleteProjectById(String projectId) {
		Project project = projectRepo.findByProjectIdentification(projectId.toUpperCase());
		if(project==null) {
			throw new ProjectIdException("Project Id :- "+ projectId +" do not exists "); 
		}
		projectRepo.delete(project);
	}
}
