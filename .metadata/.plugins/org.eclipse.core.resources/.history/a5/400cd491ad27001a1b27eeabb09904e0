package com.example.demo.security;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.springframework.security.core.Authentication;
import org.springframework.stereotype.Component;

import com.example.demo.domain.User;

import io.jsonwebtoken.Jwts;
import io.jsonwebtoken.SignatureAlgorithm;

@Component
public class JwtTokenProvider {
	
	// Generate the token
	
	public String generateTheToken(Authentication authentication){
		User user = (User)authentication.getPrincipal();
		Date now = new Date(System.currentTimeMillis());
		Date expiryDate = new Date(now.getTime()+com.example.demo.security.SecurityContant.EXPIRATION_TIME);
		
		String userId = Long.toString(user.getId());
		
		Map<String,Object> claims = new HashMap<>();// key must be same as pojo user
		claims.put("Id",userId);
		claims.put("userName",user.getUsername());
		claims.put("fullName",user.getFullName());
		
		return Jwts.builder()
				.setSubject(userId)
				.setClaims(claims)
				.setIssuedAt(now)
				.setExpiration(expiryDate)
				.signWith(SignatureAlgorithm.HS512, com.example.demo.security.SecurityContant.SECRET)
				.compact();
	}

}
