package com.example.demo.web;

import java.util.HashMap;
import java.util.Map;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.http.StreamingHttpOutputMessage.Body;
import org.springframework.validation.BindingResult;
import org.springframework.validation.FieldError;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.domain.Project;
import com.example.demo.services.ProjectService;

@RestController
@RequestMapping("/ppmtool/projects")
public class ProjectController {
	
	@Autowired
	ProjectService projectService;
	
	@PostMapping("")
	public ResponseEntity<?> createProject(@RequestBody Project project, BindingResult result){
		
		// first way validation
		/*
		 * if(result.hasErrors()) { return new
		 * ResponseEntity<String>("not a valid object",HttpStatus.BAD_REQUEST); }
		 */		
		
		//seconde way of validation
		/*
		 * if(result.hasErrors()) { Map<String,String> map = new HashMap();
		 * for(FieldError errormap : result.getFieldErrors()) {
		 * map.put(errormap.getField(), errormap.getDefaultMessage()); }
		 * 
		 * return new ResponseEntity<Map<String,String>>(map,HttpStatus.BAD_REQUEST); }
		 */		
		
		projectService.createProject(project);
		return new ResponseEntity<Project>(project,HttpStatus.CREATED);
	}
}
